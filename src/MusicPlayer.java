import javafx.embed.swing.JFXPanel;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.List;


public class MusicPlayer extends JFrame implements ActionListener {
    boolean checkStatus = false;
    private int toolbarIconsWidth = 20;
    private int toolbarIconsHeight = 20;
    private JLabel songLabel;
    private Container container;
    private JButton playBtn, pauseBtn, nextBtn, previousBtn;
    List<String> songPaths;
    // icons
    private ImageIcon playIcon, nextIcon, previousIcon, pauseIcon;

    // Sidebar components
    private SidebarPanel sidebarPanel;
    private RightPanel rightPanel;
    MediaManager mediaManager;
    JPanel songPanel;
    private int songPanelX;
    private int songPanelY;
    SongList songsList;
    JPanel buttonPanel;
    public JLabel titleLabel;
    String songTitle = "PRZYKLAD";


    public MusicPlayer() {
        // initialize SongList Class
        Toolkit tk=Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        setTitle("Odtwarzacz muzyczny");
        setSize(screenSize.width/2, screenSize.height/2);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);

        UIManager.put("text", Color.WHITE);
        // Container
        container = getContentPane();
        container.setLayout(new BorderLayout());

        songsList = new SongList("");
        mediaManager = new MediaManager(songPaths);
        // Sidebars
        sidebarPanel = new SidebarPanel();
        sidebarPanel.playlistList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // get the selected playlist
                String selectedPlaylist = sidebarPanel.getSelectedPlaylist();


                // update the table with the new song list
                refreshTable(selectedPlaylist);
            }
        });

        rightPanel = new RightPanel();
        songPanel = new JPanel(new BorderLayout());

        refreshTable("");

        // Icons - Generated by IconGenerator Class
        IconGenerator iconGenerator = new IconGenerator(toolbarIconsWidth, toolbarIconsHeight);
        playIcon = iconGenerator.createIcon("./resources/play.png");
        nextIcon = iconGenerator.createIcon("./resources/next.png");
        previousIcon = iconGenerator.createIcon("./resources/previous.png");
        pauseIcon = iconGenerator.createIcon("./resources/pause.png");
        System.out.println(playIcon);
        // Music control btns
        playBtn = new JButton(playIcon);
        previousBtn = new JButton(previousIcon);
        nextBtn = new JButton(nextIcon);
        pauseBtn = new JButton(pauseIcon);


        songLabel = new JLabel();

        buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));

        buttonPanel.add(previousBtn);
        buttonPanel.add(playBtn);
        buttonPanel.add(nextBtn);

        playBtn.setIcon(checkStatus ? playIcon : pauseIcon);

        checkStatus =  mediaManager.getMediaPlayerStatus();

        // Music controls - Action Listeners
        playBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaManager.stopSong();

                checkStatus = !checkStatus;
                playBtn.setIcon(checkStatus ? playIcon : pauseIcon);
            }
        });

        nextBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaManager.playNextSong();
                songTitle = mediaManager.getSongLabel();
                setSongName(songTitle);

            }
        });

        previousBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaManager.playPreviousSong();
                songTitle = mediaManager.getSongLabel();
                setSongName(songTitle);


            }
        });



        // Change BG color of Music Control panel
        buttonPanel.setBackground(Color.decode("#34495E"));

        JProgressBar progressBar = new JProgressBar();
        progressBar.setValue(50);


        titleLabel = new JLabel(songTitle);
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);


        JPanel bottomPanel = new JPanel(new BorderLayout());
        bottomPanel.add(progressBar, BorderLayout.NORTH);
        bottomPanel.add(titleLabel, BorderLayout.SOUTH);
        bottomPanel.add(buttonPanel, BorderLayout.CENTER);

        // UI Container - Components
        container.add(sidebarPanel, BorderLayout.WEST);
//        container.add(rightPanel, BorderLayout.EAST);
        container.add(songPanel, BorderLayout.CENTER);
        container.add(bottomPanel, BorderLayout.SOUTH);
        container.setForeground(Color.WHITE);

        setVisible(true);
    }

    public static void main(String[] args) {
        // initialize main class
        new MusicPlayer();
    }

    public void refreshTable( String selectedPlaylist) {

        if (selectedPlaylist == "" || selectedPlaylist == "All Songs"){
            songsList.setSongsFilePath("./resources/playlists/All Songs.txt");
        } else {
            songsList.setSongsFilePath("./resources/playlists/"+selectedPlaylist+".txt");
        }

        songPaths = songsList.getSongPaths(); // Get songs from SongList Class
        mediaManager.setSongPaths(songPaths);
        songPanelX = songPanel.getX();
        songPanelY = songPanel.getY();
        String[] columnNames = {"Nazwa", "Autor", "Play", "Serduszko", "Dodaj do playlisty"};
        Object[][] data = new Object[songPaths.size()][5];

        for (int i = 0; i < songPaths.size(); i++) {
            String songPath = songPaths.get(i);
            String songName = new File(songPath).getName().replace(".mp3", "");
            Song song = new Song(songName, songPath, false);

            String songLabel = song.getSongName();
            String songAuthor = song.getSongPath();
            JButton playButton = new JButton("Play");
            JButton serduszkoButton = new JButton("Serduszko");
            JButton addToPlaylist = new JButton("Dodaj do playlisty");

            data[i][0] = songLabel;
            data[i][1] = songAuthor;
            data[i][2] = playButton;
            data[i][3] = serduszkoButton;
            data[i][4] = addToPlaylist;
        }

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        JTable table = new JTable(model);

        TableColumn playColumn = table.getColumnModel().getColumn(2);


        IconGenerator iconGenerator = new IconGenerator(15, 15);
        ImageIcon playIcon = iconGenerator.createIcon("./resources/play.png");
        playColumn.setCellRenderer(new ButtonRenderer(playIcon, ""));
        playColumn.setCellEditor(new ButtonEditor(new JCheckBox(), model, table, mediaManager, this));

        TableColumn serduszkoColumn = table.getColumnModel().getColumn(3);

        ImageIcon heart = iconGenerator.createIcon("./resources/images/heart.png");
        serduszkoColumn.setCellRenderer(new ButtonRenderer(heart, "heart"));
        serduszkoColumn.setCellEditor(new ButtonEditor(new JCheckBox(), model, table, mediaManager, this));

        TableColumn addToPlaylistColumn = table.getColumnModel().getColumn(4);
        ImageIcon playlist = iconGenerator.createIcon("./resources/images/plus.png");
        addToPlaylistColumn.setCellRenderer(new ButtonRenderer(playlist, ""));
        addToPlaylistColumn.setCellEditor(new ButtonEditor(new JCheckBox(), model, table, mediaManager, this));

        songPanel.setLocation(songPanelX, songPanelY);

        songPanel.removeAll();
        songPanel.add(new JScrollPane(table), BorderLayout.CENTER);
        songPanel.revalidate();
        songPanel.repaint();
    }
    @Override
    public void actionPerformed(ActionEvent e) {

    }

    public void setSongName(String songName) {

        String song = new File(songName).getName().replace(".mp3", "");
        songTitle = song;


        titleLabel.setText(songTitle);
    }
}



