import javafx.embed.swing.JFXPanel;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.List;


public class MusicPlayer extends JFrame implements ActionListener {

    DefaultListModel<String> listModel;
    public JList<String> songList;
    private JFXPanel fxPanel;
    boolean checkStatus = false;

    private int toolbarIconsWidth = 20;
    private int toolbarIconsHeight = 20;

    private JLabel songLabel;
    private String songTitle;

    private JButton playBtn, pauseBtn, nextBtn, previousBtn;


    //  JavaFX

    List<String> songPaths;

    // icons
    private ImageIcon playIcon, nextIcon, previousIcon, pauseIcon;

    // Sidebar components
    private SidebarPanel sidebarPanel;
    private RightPanel rightPanel;

    public MusicPlayer() {
        // initialize SongList Class
        SongList songsList = new SongList();

        Toolkit tk=Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        setTitle("Odtwarzacz muzyczny");
        setSize(screenSize.width/2, screenSize.height/2);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);

        UIManager.put("text", Color.WHITE);

        // Container
        Container container = getContentPane();
        container.setLayout(new BorderLayout());

        // Sidebars
        sidebarPanel = new SidebarPanel();
        rightPanel = new RightPanel();


        songPaths = songsList.getSongPaths(); // Get songs from SongList Class
        MediaManager mediaManager = new MediaManager(songPaths);


        // create list model and add elements to it
        listModel = new DefaultListModel<>();
        for (String songPath : songPaths) {
            listModel.addElement(new File(songPath).getName().replace(".mp3", ""));
        }

        // create song list
        songList = new JList<>(listModel);
        songList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        songList.setBackground(Color.decode("#2C3E50"));
        songList.setForeground(Color.WHITE);

        // create list selection listener - It plays music on click
        ListSelectionListener listSelectionListener = new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedSongPath = songPaths.get(songList.getSelectedIndex());

                    System.out.println(songPaths.get(songList.getSelectedIndex()));
                    mediaManager.playSong(selectedSongPath);
                    songTitle = mediaManager.getSongLabel();

                    checkStatus = true;
                }
            }
        };
        songList.addListSelectionListener(listSelectionListener);

        // Icons - Generated by IconGenerator Class
        IconGenerator iconGenerator = new IconGenerator(toolbarIconsWidth, toolbarIconsHeight);
        playIcon = iconGenerator.createIcon("./resources/play.png");
        nextIcon = iconGenerator.createIcon("./resources/next.png");
        previousIcon = iconGenerator.createIcon("./resources/previous.png");
        pauseIcon = iconGenerator.createIcon("./resources/pause.png");

        // Music control btns
        playBtn = new JButton(playIcon);
        previousBtn = new JButton(previousIcon);
        nextBtn = new JButton(nextIcon);
        pauseBtn = new JButton(pauseIcon);

        songLabel = new JLabel();
        songLabel.setText(songTitle);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));

        buttonPanel.add(previousBtn);
        buttonPanel.add(playBtn);
        buttonPanel.add(nextBtn);

        JPanel songPanel = new JPanel(new BorderLayout());
        songPanel.add(songLabel, BorderLayout.NORTH);
        songPanel.add(buttonPanel, BorderLayout.CENTER);
        playBtn.setIcon(checkStatus ? playIcon : pauseIcon);

        checkStatus =  mediaManager.getMediaPlayerStatus();


        // Music controls - Action Listeners

        playBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaManager.stopSong();

                checkStatus = !checkStatus;
                playBtn.setIcon(checkStatus ? playIcon : pauseIcon);
            }
        });
        nextBtn.addActionListener(e->mediaManager.playNextSong());
        previousBtn.addActionListener(e->mediaManager.playPreviousSong());

        // Change BG color of Music Control panel
        buttonPanel.setBackground(Color.decode("#34495E"));

        JProgressBar progressBar = new JProgressBar();
        progressBar.setValue(50);


        JPanel bottomPanel = new JPanel(new BorderLayout());
        bottomPanel.add(songPanel, BorderLayout.NORTH);
        bottomPanel.add(progressBar, BorderLayout.CENTER);

        // !! Important !! Initialize JavaFX Panel - Allow to play music
        fxPanel = new JFXPanel();

        // UI Container - Components
        container.add(sidebarPanel, BorderLayout.WEST);
        container.add(rightPanel, BorderLayout.EAST);
        container.add(songList, BorderLayout.CENTER);
        container.add(bottomPanel, BorderLayout.SOUTH);
        container.add(fxPanel, BorderLayout.PAGE_START);
        container.setForeground(Color.WHITE);

        setVisible(true);
    }

    public static void main(String[] args) {
        // initialize main class
        new MusicPlayer();
    }


    @Override
    public void actionPerformed(ActionEvent e) {

    }
}



